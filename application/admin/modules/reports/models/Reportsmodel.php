<?phpdefined('BASEPATH') OR exit('No direct script access allowed');class Reportsmodel extends Commonmodel {    private $data;    function __construct() {        # code...        parent::__construct();    }    function getYearlySalesReport() {        $currentyear = date('Y');        $data = $this->db->query("SELECT MONTH(STR_TO_DATE(m.month,'%M')) as month_number, COUNT(u.id) AS total, m.month FROM "                . "("                . " SELECT 'Jan' AS MONTH UNION "                . "SELECT 'Feb' AS MONTH UNION "                . "SELECT 'Mar' AS MONTH UNION "                . "SELECT 'Apr' AS MONTH UNION "                . "SELECT 'May' AS MONTH UNION "                . "SELECT 'Jun' AS MONTH UNION "                . "SELECT 'Jul' AS MONTH UNION "                . "SELECT 'Aug' AS MONTH UNION "                . "SELECT 'Sep' AS MONTH UNION "                . "SELECT 'Oct' AS MONTH UNION SELECT "                . "'Nov' AS MONTH UNION SELECT 'Dec' AS MONTH ) AS m "                . "LEFT JOIN bg_order u "                . "ON MONTH(STR_TO_DATE(CONCAT(m.month, ' " . $currentyear . "'),'%M %Y')) = MONTH(u.order_time) AND YEAR(u.order_time) = '" . $currentyear . "' "                . "GROUP BY m.month ORDER BY month_number asc        ");        return($data->result_array());    }    function getCompanyDashboardPiechart($userId) {        //return($array);        $userStatus = [];        $userStatus[1] = 'In Progress';        $userStatus[2] = 'Complete to Order';        $userStatus[3] = 'Complete to Order & Stock';        $userStatus[4] = 'Complete to Stock & Cancel';        $userStatus[5] = 'Complete to Cancel';        $currentyear = date('Y-m-d 23:59:59', strtotime('12/31'));        $param = [];        $param['select'] = 'count(id) as request, status';        $param['from_tbl'] = 'request';        $param['where']['customer_id'] = $userId;        $param['where']['req_time <='] = $currentyear;        $param['group'] = 'status';        $userDet = $this->get_all($param);        $statusStack = com_makelist($userDet, 'status', 'request', false);        $chartData = [];        foreach ($userStatus as $resStatusInd => $resStatusDet) {            if (isset($statusStack[$resStatusInd])) {                $chartData[] = [ 'mode' => $resStatusDet, 'count' => $statusStack[$resStatusInd]];            } else {                $chartData[] = [ 'mode' => $resStatusDet, 'count' => 0];            }        }        return( $chartData );    }    function getCompanyDashboardBarchart($cost_center, $duration = NULL) {        $t1 = $this->db->dbprefix('order');        $t2 = $this->db->dbprefix('order_item');        $r = $this->db->query('select t1.company_name, week(t1.order_time),sum(t2.order_item_price) as total from ' . $t1 . ' t1 '                . 'left join ' . $t2 . ' t2 on t1.id = t2.order_id '                . 'where week(t1.order_time) = week(now() - interval 1 week) '                . 'group by t2.order_id');        $r->result();        foreach ($r->result() as $value) {            $lebal[] = ($value->company_name == NULL) ? 'demo' : $value->company_name;            $data[] = ($value->total == NULL) ? '100' : $value->total;        }        $comp_color = com_get_theme_menu_color();        $base_color = '#783914';        $hover_color = '#d37602';        if ($comp_color) {            $base_color = com_arrIndex($comp_color, 'theme_menu_base', '#f27733');            $hover_color = com_arrIndex($comp_color, 'theme_menu_hover', '#d37602');        }        $result['labels'] = $lebal;        $result['datasets'][] = array(            'fillColor' => $base_color,            'strokeColor' => $base_color,            'highlightFill' => $hover_color,            'highlightStroke' => $hover_color,            'data' => $data);        return json_encode($result);    }    public function getLatLong($address) {        if (!empty($address)) {            //Formatted address            $formattedAddr = str_replace(' ', '+', $address);           //var_dump("this is format addressss===========================================================" . $formattedAddr);             //Send request and receive json data by address            $geocodeFromAddr = file_get_contents('http://maps.googleapis.com/maps/api/geocode/json?address=' . $formattedAddr . '&key=AIzaSyDl7ONPXoxzzSH4tb28bqhYJqTPhXzEEAw');//           com_e($geocodeFromAddr,0);            $output = json_decode($geocodeFromAddr);            //Get latitude and longitute from json data           //var_dump("this is the output ===============================================================" .$output);//            com_e($output,0);             if($output->status != 'ZERO_RESULTS'){                                $data['latitude'] = isset($output->results[0]->geometry->location->lat)? $output->results[0]->geometry->location->lat:  "null";            $data['longitude'] = isset($output->results[0]->geometry->location->lng)?  $output->results[0]->geometry->location->lng : "null";            }                        //Return latitude and longitude of the given address            if (!empty($data)) {                return $data;            } else {                return false;            }        } else {            return false;        }    }    public function getAllOrders() {        $r = $this->db->select('t1.*')->from('order_ship_detail t1')->join('order t2', 't1.order_id=t2.id', 'left')->where('t2.status !=', 'Processed')->get()->result_array();//        com_e($r);        if ($r) {            foreach ($r as $key => $value) {                $address = '"' . $value['address_1'] . ' ' . $value['address_2'] . ', ' . $value['city'] . ', ' . $value['county'] . ', United States"';                $address1 = $value['address_1'] . ' ' . $value['address_2'] . ' ' . $value['city'] . ' ' . $value['county'] . ' United States';                $latLong = $this->getLatLong($address);                                if ($latLong) {                    if($latLong['latitude'] != null && $latLong['longitude'] != null){                    $result[] = array($address1, $latLong['latitude'], $latLong['longitude']);                    }                }            }//            com_e('s');            return json_encode($result);        } else {            return false;        }    }    public function getComapanyAllOrders($id) {        $this->db->select('t1.*');        $this->db->from('order_ship_detail t1');        $this->db->join('order t2', 't1.order_id=t2.id', 'left');        $this->db->where('t2.status =', 'Processed');        $this->db->where('t2.company_id =', $id);        $r = $this->db->get()->result_array();        if ($r) {            foreach ($r as $key => $value) {                $address = '"' . $value['address_1'] . ' ' . $value['address_2'] . ', ' . $value['city'] . ', ' . $value['county'] . ', United States"';                $address1 = $value['address_1'] . ' ' . $value['address_2'] . ' ' . $value['city'] . ' ' . $value['county'] . ' United States';                $latLong = $this->getLatLong($address);                if ($latLong) {                    $result[] = array($address1, $latLong['latitude'], $latLong['longitude']);                }            }            return json_encode($result);        } else {            return false;        }    }    public function getUserAllOrders($id) {        $this->db->select('t1.*');        $this->db->from('order_ship_detail t1');        $this->db->join('order t2', 't1.order_id=t2.id', 'left');        $this->db->where('t2.status =', 'Processed');        $this->db->where('t2.com_user_id =', $id);        $r = $this->db->get()->result_array();        if ($r) {            foreach ($r as $key => $value) {                $address = '"' . $value['address_1'] . ' ' . $value['address_2'] . ', ' . $value['city'] . ', ' . $value['county'] . ', United States"';                $address1 = $value['address_1'] . ' ' . $value['address_2'] . ' ' . $value['city'] . ' ' . $value['county'] . ' United States';                $latLong = $this->getLatLong($address);                if ($latLong) {                    $result[] = array($address1, $latLong['latitude'], $latLong['longitude']);                }            }            return json_encode($result);        } else {            return false;        }    }}